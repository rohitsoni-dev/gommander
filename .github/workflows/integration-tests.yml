name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run integration tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x, 18.x, 20.x]
        include:
          # Test additional architectures on Linux
          - os: ubuntu-latest
            node-version: 18.x
            arch: arm64
          # Test LTS versions
          - os: ubuntu-latest
            node-version: 14.x
          - os: windows-latest
            node-version: 14.x
          - os: macos-latest
            node-version: 14.x

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: npm ci

    - name: Build WASM binary
      run: npm run build:wasm

    - name: Build JavaScript
      run: npm run build:js

    - name: Run unit tests first
      run: npm test

    - name: Run E2E Integration Tests
      run: node scripts/run-integration-tests.js e2e
      timeout-minutes: 10

    - name: Run Comprehensive E2E Tests
      run: node scripts/comprehensive-test-runner.js comprehensive-e2e enhanced-e2e
      timeout-minutes: 15

    - name: Run Compatibility Tests
      run: node scripts/run-integration-tests.js compatibility
      timeout-minutes: 5

    - name: Run Cross-Platform Tests
      run: node scripts/run-integration-tests.js cross-platform
      timeout-minutes: 8

    - name: Run Comprehensive Cross-Platform Tests
      run: node scripts/comprehensive-test-runner.js cross-platform
      timeout-minutes: 10

    - name: Run Performance Benchmarks
      run: node scripts/run-integration-tests.js performance
      timeout-minutes: 15

    - name: Run Comprehensive Performance Tests
      run: node scripts/comprehensive-test-runner.js performance
      timeout-minutes: 20

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
        path: |
          coverage/
          test-results.xml
          performance-report.json
          integration-test-report.json
          INTEGRATION_TEST_REPORT.md

    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'
      with:
        name: wasm-artifacts
        path: |
          wasm/
          lib/

  performance-comparison:
    name: Performance Comparison
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run performance comparison
      run: |
        echo "## Performance Comparison" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Comparing GoCommander performance against baseline..." >> $GITHUB_STEP_SUMMARY
        node scripts/run-integration-tests.js performance | tee performance-output.txt
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat performance-output.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  compatibility-matrix:
    name: Compatibility Matrix
    runs-on: ubuntu-latest
    needs: integration-tests

    steps:
    - name: Generate compatibility report
      run: |
        echo "## Compatibility Matrix" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Platform | Node 14 | Node 16 | Node 18 | Node 20 |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|---------|---------|---------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| Ubuntu   | ✅      | ✅      | ✅      | ✅      |" >> $GITHUB_STEP_SUMMARY
        echo "| Windows  | ✅      | ✅      | ✅      | ✅      |" >> $GITHUB_STEP_SUMMARY
        echo "| macOS    | ✅      | ✅      | ✅      | ✅      |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All integration tests passed across supported platforms and Node.js versions." >> $GITHUB_STEP_SUMMARY