{
  "name": "gocommander",
  "version": "1.0.4",
  "description": "A high-performance Go-based port of Commander.js compiled to WebAssembly. Drop-in replacement with identical API and 2-5x better performance.",
  "main": "lib/index.js",
  "module": "lib/index.esm.js",
  "types": "lib/index.d.ts",
  "exports": {
    ".": {
      "import": "./lib/index.esm.js",
      "require": "./lib/index.js",
      "types": "./lib/index.d.ts"
    },
    "./package.json": "./package.json",
    "./lib/*": "./lib/*",
    "./wasm/*": "./wasm/*"
  },
  "files": [
    "lib/",
    "wasm/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "docs/",
    "examples/"
  ],
  "scripts": {
    "build": "npm run clean && npm run build:wasm && npm run build:js && npm run build:types && npm run build:docs",
    "build:optimized": "node scripts/build-optimized.js",
    "build:wasm": "node scripts/build-wasm.js",
    "build:js": "rollup -c rollup.config.js",
    "build:types": "node -e \"require('fs').copyFileSync('src/index.d.ts', 'lib/index.d.ts')\"",
    "build:docs": "node scripts/build-docs.js",
    "build:examples": "node scripts/build-examples.js",
    "test": "jest --selectProjects unit",
    "test:integration": "node scripts/run-integration-tests.js",
    "test:comprehensive": "node scripts/comprehensive-test-runner.js",
    "test:e2e": "node scripts/run-integration-tests.js e2e",
    "test:e2e-comprehensive": "node scripts/comprehensive-test-runner.js --e2e-only",
    "test:compatibility": "node scripts/run-integration-tests.js compatibility",
    "test:cross-platform": "node scripts/run-integration-tests.js cross-platform",
    "test:cross-platform-comprehensive": "node scripts/comprehensive-test-runner.js --cross-platform-only",
    "test:performance": "node scripts/run-integration-tests.js performance",
    "test:performance-comprehensive": "node scripts/comprehensive-test-runner.js --performance-only",
    "test:all": "npm run test && npm run test:integration",
    "test:all-comprehensive": "npm run test && npm run test:comprehensive",
    "test:wasm": "node scripts/test-wasm.js",
    "test:ci": "npm run test:all && npm run test:compatibility && npm run test:performance",
    "dev": "npm run build && npm run test",
    "dev:watch": "npm run build:wasm && rollup -c rollup.config.js --watch",
    "lint": "eslint src/ tests/ --ext .js",
    "lint:fix": "eslint src/ tests/ --ext .js --fix",
    "format": "prettier --write \"src/**/*.js\" \"tests/**/*.js\" \"scripts/**/*.js\"",
    "format:check": "prettier --check \"src/**/*.js\" \"tests/**/*.js\" \"scripts/**/*.js\"",
    "size-check": "node scripts/check-bundle-size.js",
    "benchmark": "node scripts/benchmark.js",
    "clean": "rimraf lib wasm dist docs/api coverage .nyc_output",
    "prepack": "npm run build && npm run test:ci",
    "prepublishOnly": "npm run prepack && npm run size-check",
    "postpublish": "git tag v$npm_package_version && git push origin v$npm_package_version",
    "release": "node scripts/prepare-release.js patch",
    "release:minor": "node scripts/prepare-release.js minor",
    "release:major": "node scripts/prepare-release.js major",
    "release:prepare": "node scripts/prepare-release.js",
    "release:final": "npm run build && npm run test:ci && npm run validate:release && echo 'Ready for npm publish'",
    "version:info": "node scripts/version-manager.js info",
    "version:bump": "node scripts/version-manager.js bump",
    "version:set": "node scripts/version-manager.js set",
    "validate": "node scripts/quick-validate.js",
    "validate:full": "node scripts/validate-release.js",
    "validate:release": "node scripts/validate-release.js",
    "docs:serve": "node scripts/serve-docs.js",
    "examples:run": "node examples/run-examples.js"
  },
  "keywords": [
    "cli",
    "command-line",
    "commander",
    "commander.js",
    "go",
    "golang",
    "wasm",
    "webassembly",
    "performance",
    "argument-parser",
    "option-parser",
    "subcommands",
    "drop-in-replacement",
    "high-performance",
    "typescript",
    "nodejs",
    "fast",
    "zero-dependencies",
    "cross-platform",
    "terminal",
    "console",
    "args",
    "argv",
    "parsing",
    "flags",
    "options",
    "arguments"
  ],
  "author": "Rohit Soni",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/rohitsoni-dev/gocommander.git"
  },
  "bugs": {
    "url": "https://github.com/rohitsoni-dev/gocommander/issues"
  },
  "homepage": "https://github.com/rohitsoni-dev/gocommander#readme",
  "engines": {
    "node": ">=14.0.0"
  },
  "devDependencies": {
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-commonjs": "^25.0.7",
    "@rollup/plugin-typescript": "^11.1.5",
    "@types/node": "^20.10.0",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-node": "^11.1.0",
    "jest": "^29.7.0",
    "jsdoc": "^4.0.2",
    "jsdoc-to-markdown": "^8.0.0",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "rollup": "^4.6.1",
    "@rollup/plugin-terser": "^0.4.4",
    "typescript": "^5.3.2"
  },
  "dependencies": {},
  "peerDependencies": {
    "node": ">=14.0.0"
  }
}